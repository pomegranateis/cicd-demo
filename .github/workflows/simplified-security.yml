name: Simplified Security Scan

# This workflow provides a more reliable alternative to the enhanced security workflow
# It focuses on core SAST functionality with better error handling

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]
  workflow_dispatch:

# Required permissions for security integrations
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          
      - name: Run tests
        run: mvn clean test
        
  security-scan:
    name: Security Vulnerability Scan  
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          
      - name: Build project
        run: mvn clean compile -DskipTests
        
      - name: Check Snyk token configuration
        run: |
          if [ -z "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "‚ö†Ô∏è SNYK_TOKEN not configured"
            echo "::warning::SNYK_TOKEN secret not set. Please configure it in repository settings."
            echo "Visit https://snyk.io to get your API token"
            exit 1
          else
            echo "‚úÖ SNYK_TOKEN configured"
          fi
          
      - name: Install Snyk CLI
        run: |
          echo "üì¶ Installing Snyk CLI..."
          npm install -g snyk@latest
          snyk --version
          
      - name: Authenticate with Snyk
        run: |
          echo "üîë Authenticating with Snyk..."
          snyk auth ${{ secrets.SNYK_TOKEN }}
          echo "‚úÖ Authentication successful"
          
      - name: Run Snyk vulnerability scan
        run: |
          echo "üîç Running Snyk vulnerability scan..."
          
          # Run the scan and capture results
          snyk test --maven \
            --severity-threshold=medium \
            --json-file-output=snyk-results.json \
            --sarif-file-output=snyk-results.sarif \
            || echo "‚ö†Ô∏è Vulnerabilities found (this is expected with our test dependencies)"
            
          echo "üìä Scan completed"
          
      - name: Display scan results
        if: always()
        run: |
          echo "## üîç Security Scan Results" >> $GITHUB_STEP_SUMMARY
          
          if [ -f snyk-results.json ]; then
            echo "‚úÖ **JSON Results**: Generated" >> $GITHUB_STEP_SUMMARY
            
            # Try to extract summary information
            if command -v jq >/dev/null 2>&1; then
              VULN_COUNT=$(cat snyk-results.json | jq '.uniqueCount // 0' 2>/dev/null || echo "0")
              echo "üö® **Vulnerabilities Found**: $VULN_COUNT" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ùå **JSON Results**: Not generated" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f snyk-results.sarif ]; then
            echo "‚úÖ **SARIF Report**: Generated" >> $GITHUB_STEP_SUMMARY
            echo "üìè **SARIF Size**: $(du -h snyk-results.sarif | cut -f1)" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **SARIF Report**: Not generated" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Expected Findings:**" >> $GITHUB_STEP_SUMMARY
          echo "- commons-collections 3.2.1 vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "- commons-compress 1.18 vulnerabilities" >> $GITHUB_STEP_SUMMARY
          
      - name: Upload SARIF to GitHub Security
        if: hashFiles('snyk-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        with:
          sarif_file: snyk-results.sarif
          category: snyk-dependencies
          
      - name: Archive security results
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: security-scan-results
          path: |
            snyk-results.json
            snyk-results.sarif
          retention-days: 30
          
      - name: Monitor project (production only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        continue-on-error: true
        run: |
          echo "üìä Monitoring project for ongoing security tracking..."
          snyk monitor --maven \
            --project-name="${{ github.repository }}" \
            --target-reference="${{ github.ref }}" \
            || echo "‚ö†Ô∏è Monitoring completed with warnings"
